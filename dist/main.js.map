{
  "version": 3,
  "sources": ["../main.ts"],
  "sourcesContent": ["import { App, Plugin, PluginSettingTab, Setting, MarkdownView, Notice, TFile } from 'obsidian';\n\ninterface TextComposerSettings {\n\tdefaultSetting: string;\n}\n\nconst DEFAULT_SETTINGS: TextComposerSettings = {\n\tdefaultSetting: 'default'\n}\n\nexport default class TextComposerPlugin extends Plugin {\n\tsettings: TextComposerSettings;\n\n\tasync onload() {\n\t\tawait this.loadSettings();\n\n\t\t// Add a command to compile the document\n\t\tthis.addCommand({\n\t\t\tid: 'compile-md-document',\n\t\t\tname: 'Compile MD Document',\n\t\t\tcallback: () => this.compileDocument()\n\t\t});\n\n\t\t// Add a settings tab\n\t\tthis.addSettingTab(new TextComposerSettingTab(this.app, this));\n\t}\n\n\tonunload() {}\n\n\tasync loadSettings() {\n\t\tthis.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());\n\t}\n\n\tasync saveSettings() {\n\t\tawait this.saveData(this.settings);\n\t}\n\n\tasync compileDocument() {\n\t\tconst activeView = this.app.workspace.getActiveViewOfType(MarkdownView);\n\t\tif (!activeView) {\n\t\t\tnew Notice('No active markdown view found');\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = activeView.editor;\n\t\tconst content = editor.getValue();\n\t\tconst compiledContent = await this.replaceLinks(content);\n\n\t\t// Get the current file and generate the new file name\n\t\tconst currentFile = activeView.file;\n\t\tif (currentFile) {\n\t\t\tconst newFileName = currentFile.basename + '_compiled.md';\n\t\t\tconst parentPath = currentFile.parent ? currentFile.parent.path : '';\n\t\t\tconst newFilePath = parentPath + '/' + newFileName;\n\n\t\t\t// Create a new file with the compiled content\n\t\t\tawait this.app.vault.create(newFilePath, compiledContent);\n\n\t\t\tnew Notice(`Compiled document created: ${newFilePath}`);\n\t\t} else {\n\t\t\tnew Notice('No current file found');\n\t\t}\n\t}\n\n\tasync replaceLinks(content: string): Promise<string> {\n\t\tconst linkPattern = /!\\[\\[([^\\]]+)\\]\\]/g;\n\t\tlet match: RegExpExecArray | null;\n\t\tlet result = content;\n\n\t\twhile ((match = linkPattern.exec(content)) !== null) {\n\t\t\tconst linkedFile = match[1];\n\t\t\tconst linkedFilePath = this.app.metadataCache.getFirstLinkpathDest(linkedFile, \"\");\n\t\t\tif (linkedFilePath) {\n\t\t\t\tconst fileContent = await this.app.vault.read(linkedFilePath);\n\t\t\t\tconst compiledContent = await this.replaceLinks(fileContent); // Recursive replacement\n\t\t\t\tresult = result.replace(match[0], compiledContent);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nclass TextComposerSettingTab extends PluginSettingTab {\n\tplugin: TextComposerPlugin;\n\n\tconstructor(app: App, plugin: TextComposerPlugin) {\n\t\tsuper(app, plugin);\n\t\tthis.plugin = plugin;\n\t}\n\n\tdisplay(): void {\n\t\tconst { containerEl } = this;\n\t\tcontainerEl.empty();\n\n\t\tcontainerEl.createEl('h2', { text: 'Text Composer Settings' });\n\n\t\tnew Setting(containerEl)\n\t\t\t.setName('Default Setting')\n\t\t\t.setDesc('A default setting for the plugin')\n\t\t\t.addText(text => text\n\t\t\t\t.setPlaceholder('Enter your setting')\n\t\t\t\t.setValue(this.plugin.settings.defaultSetting)\n\t\t\t\t.onChange(async (value) => {\n\t\t\t\t\tthis.plugin.settings.defaultSetting = value;\n\t\t\t\t\tawait this.plugin.saveSettings();\n\t\t\t\t}));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoF;AAMpF,IAAM,mBAAyC;AAAA,EAC9C,gBAAgB;AACjB;AAEA,IAAqB,qBAArB,cAAgD,uBAAO;AAAA,EAGhD,SAAS;AAAA;AACd,YAAM,KAAK,aAAa;AAGxB,WAAK,WAAW;AAAA,QACf,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,UAAU,MAAM,KAAK,gBAAgB;AAAA,MACtC,CAAC;AAGD,WAAK,cAAc,IAAI,uBAAuB,KAAK,KAAK,IAAI,CAAC;AAAA,IAC9D;AAAA;AAAA,EAEA,WAAW;AAAA,EAAC;AAAA,EAEN,eAAe;AAAA;AACpB,WAAK,WAAW,OAAO,OAAO,CAAC,GAAG,kBAAkB,MAAM,KAAK,SAAS,CAAC;AAAA,IAC1E;AAAA;AAAA,EAEM,eAAe;AAAA;AACpB,YAAM,KAAK,SAAS,KAAK,QAAQ;AAAA,IAClC;AAAA;AAAA,EAEM,kBAAkB;AAAA;AACvB,YAAM,aAAa,KAAK,IAAI,UAAU,oBAAoB,4BAAY;AACtE,UAAI,CAAC,YAAY;AAChB,YAAI,uBAAO,+BAA+B;AAC1C;AAAA,MACD;AAEA,YAAM,SAAS,WAAW;AAC1B,YAAM,UAAU,OAAO,SAAS;AAChC,YAAM,kBAAkB,MAAM,KAAK,aAAa,OAAO;AAGvD,YAAM,cAAc,WAAW;AAC/B,UAAI,aAAa;AAChB,cAAM,cAAc,YAAY,WAAW;AAC3C,cAAM,aAAa,YAAY,SAAS,YAAY,OAAO,OAAO;AAClE,cAAM,cAAc,aAAa,MAAM;AAGvC,cAAM,KAAK,IAAI,MAAM,OAAO,aAAa,eAAe;AAExD,YAAI,uBAAO,8BAA8B,aAAa;AAAA,MACvD,OAAO;AACN,YAAI,uBAAO,uBAAuB;AAAA,MACnC;AAAA,IACD;AAAA;AAAA,EAEM,aAAa,SAAkC;AAAA;AACpD,YAAM,cAAc;AACpB,UAAI;AACJ,UAAI,SAAS;AAEb,cAAQ,QAAQ,YAAY,KAAK,OAAO,OAAO,MAAM;AACpD,cAAM,aAAa,MAAM,CAAC;AAC1B,cAAM,iBAAiB,KAAK,IAAI,cAAc,qBAAqB,YAAY,EAAE;AACjF,YAAI,gBAAgB;AACnB,gBAAM,cAAc,MAAM,KAAK,IAAI,MAAM,KAAK,cAAc;AAC5D,gBAAM,kBAAkB,MAAM,KAAK,aAAa,WAAW;AAC3D,mBAAS,OAAO,QAAQ,MAAM,CAAC,GAAG,eAAe;AAAA,QAClD;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAAA;AACD;AAEA,IAAM,yBAAN,cAAqC,iCAAiB;AAAA,EAGrD,YAAY,KAAU,QAA4B;AACjD,UAAM,KAAK,MAAM;AACjB,SAAK,SAAS;AAAA,EACf;AAAA,EAEA,UAAgB;AACf,UAAM,EAAE,YAAY,IAAI;AACxB,gBAAY,MAAM;AAElB,gBAAY,SAAS,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAE7D,QAAI,wBAAQ,WAAW,EACrB,QAAQ,iBAAiB,EACzB,QAAQ,kCAAkC,EAC1C,QAAQ,UAAQ,KACf,eAAe,oBAAoB,EACnC,SAAS,KAAK,OAAO,SAAS,cAAc,EAC5C,SAAS,CAAO,UAAU;AAC1B,WAAK,OAAO,SAAS,iBAAiB;AACtC,YAAM,KAAK,OAAO,aAAa;AAAA,IAChC,EAAC,CAAC;AAAA,EACL;AACD;",
  "names": []
}
